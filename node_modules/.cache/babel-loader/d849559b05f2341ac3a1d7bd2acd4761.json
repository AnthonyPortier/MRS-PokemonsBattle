{"ast":null,"code":"import _slicedToArray from \"/home/anthony/Devweb/WILD/POKEMON/MRS-PokemonsBattle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anthony/Devweb/WILD/POKEMON/MRS-PokemonsBattle/src/components/fight/Fight.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./Fight.css\";\n\nfunction Fight(props) {\n  const params = props.match.params;\n\n  const _useState = useState({\n    stats: [],\n    sprites: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataPokemonPerso = _useState2[0],\n        setDataPokemonPerso = _useState2[1];\n\n  const _useState3 = useState({\n    stats: [],\n    sprites: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dataPokemonComputer = _useState4[0],\n        setDataPokemonComputer = _useState4[1];\n\n  useEffect(() => {\n    getPokemonPerso();\n  }, []);\n  useEffect(() => {\n    getPokemonComputer();\n  }, []);\n\n  const getPokemonPerso = async () => {\n    await axios.get(\"https://pokeapi.co/api/v2/pokemon/\".concat(params.idperso)).then(res => setDataPokemonPerso(res.data));\n  };\n\n  const getPokemonComputer = async () => {\n    await axios.get(\"https://pokeapi.co/api/v2/pokemon/\".concat(params.idcomputer)).then(res => setDataPokemonComputer(res.data));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Pokemon perso :\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, dataPokemonPerso.name), React.createElement(\"img\", {\n    src: dataPokemonPerso.sprites.front_default,\n    alt: \"front\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: dataPokemonPerso.sprites.back_default,\n    alt: \"back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), dataPokemonPerso.stats.map((x, y) => React.createElement(\"p\", {\n    key: y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"\".concat(x.stat.name, \" : \").concat(x.base_stat)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Pokemon computer :\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, dataPokemonComputer.name), React.createElement(\"img\", {\n    src: dataPokemonComputer.sprites.front_default,\n    alt: \"front\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: dataPokemonComputer.sprites.back_default,\n    alt: \"back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), dataPokemonComputer.stats.map((x, y) => React.createElement(\"p\", {\n    key: y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\".concat(x.stat.name, \" : \").concat(x.base_stat)))));\n}\n\nexport default Fight;","map":{"version":3,"sources":["/home/anthony/Devweb/WILD/POKEMON/MRS-PokemonsBattle/src/components/fight/Fight.jsx"],"names":["React","useState","useEffect","axios","Fight","props","params","match","stats","sprites","dataPokemonPerso","setDataPokemonPerso","dataPokemonComputer","setDataPokemonComputer","getPokemonPerso","getPokemonComputer","get","idperso","then","res","data","idcomputer","name","front_default","back_default","map","x","y","stat","base_stat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport \"./Fight.css\";\n\n\nfunction Fight(props) {\n    const params = props.match.params;\n\n\n    const [dataPokemonPerso, setDataPokemonPerso] = useState({\n        stats: [],\n        sprites:[]\n    });\n\n    const [dataPokemonComputer, setDataPokemonComputer] = useState({\n        stats: [],\n        sprites: []\n    });\n\n\n    useEffect(()=>{\n        getPokemonPerso()\n    },[])\n\n    useEffect(() => {\n        getPokemonComputer()\n    }, [])\n\n    const getPokemonPerso = async()=>{\n        await axios.get(`https://pokeapi.co/api/v2/pokemon/${params.idperso}`)\n        .then(res=>setDataPokemonPerso(res.data))\n    }\n\n    const getPokemonComputer = async () => {\n        await axios.get(`https://pokeapi.co/api/v2/pokemon/${params.idcomputer}`)\n            .then(res => setDataPokemonComputer(res.data))\n    }\n\n    \n  \n\n    return (\n        <div>\n            \n        <div>\n            <h1>Pokemon perso :</h1>\n            <p>{dataPokemonPerso.name}</p>\n            <img src={dataPokemonPerso.sprites.front_default} alt='front'/>\n            <img src={dataPokemonPerso.sprites.back_default} alt='back' />\n\n            {dataPokemonPerso.stats.map((x,y)=><p key={y}>{`${x.stat.name} : ${x.base_stat}`}</p>)}\n\n\n        </div>\n         <div>\n            <h1>Pokemon computer :</h1>\n            <p>{dataPokemonComputer.name}</p>\n            <img src={dataPokemonComputer.sprites.front_default} alt='front'/>\n            <img src={dataPokemonComputer.sprites.back_default} alt='back' />\n\n            {dataPokemonComputer.stats.map((x,y)=><p key={y}>{`${x.stat.name} : ${x.base_stat}`}</p>)}\n\n\n        </div>\n        </div>\n);\n    }\n\nexport default Fight;"]},"metadata":{},"sourceType":"module"}